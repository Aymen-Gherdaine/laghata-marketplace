{"version":3,"file":"static/js/544.85ae9dc7.chunk.js","mappings":"+OAOA,MAqFMA,EAAwBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKlCC,EAAsBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yVAkBhCG,EAAQN,EAAAA,GAAOO,GAAEC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kNAajBM,EAAgBT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gGAO1BQ,EAAOX,EAAAA,GAAOY,IAAGC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2BAIjBW,EAASd,EAAAA,GAAOe,OAAMC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,8UAmB5B,EAvJ8Bc,KAC5B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,aAGxB,mBAAEG,IAAuBC,EAAAA,EAAAA,MAEzBC,GAAWC,EAAAA,EAAAA,MAiCjB,OA/BAC,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEV,mBAAoBA,KAEpBW,WACvB,IACE,MAAMC,QAAiBC,MAAM,GAADC,OACvBC,sBAAiC,qBACpCV,GAGIW,QAAsBJ,EAASK,OAEjB,IAADC,EAAnB,GAAIF,EAEFG,aAAaC,QAAQ,QAAsB,OAAbJ,QAAa,IAAbA,GAAmB,QAANE,EAAbF,EAAeK,YAAI,IAAAH,OAAN,EAAbA,EAAqBI,OACnDvB,GAAW,GACXH,GAAW,EAEf,CAAE,MAAO2B,GACPC,QAAQC,IAAIF,EAAMG,OAClB3B,GAAW,GACXH,GAAW,EACb,GAEF+B,EAAkB,GACjB,KAGDC,EAAAA,EAAAA,KAACpD,EAAqB,CAAAqD,SACnBlC,GACCiC,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,CAAAD,UACED,EAAAA,EAAAA,KAACG,EAAAA,EAAc,OAGjBC,EAAAA,EAAAA,MAACnD,EAAmB,CAAAgD,SAAA,EAClBD,EAAAA,EAAAA,KAAC1C,EAAa,CAAA2C,UACZD,EAAAA,EAAAA,KAACxC,EAAI,CAAC6C,IAAKC,EAAWC,IAAI,iBAEf,IAAZrC,GACCkC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAD,SAAA,EACED,EAAAA,EAAAA,KAAC7C,EAAK,CAAA8C,SAAC,sCACPD,EAAAA,EAAAA,KAACrC,EAAM,CACL6C,QAASA,KACPlC,EAAS,MAAMmC,EAAAA,EAAAA,KAAa,EAC5BR,SACH,wBAKS,IAAZ/B,IACEkC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAD,SAAA,EACED,EAAAA,EAAAA,KAAC7C,EAAK,CAAA8C,SAAC,4DAGPD,EAAAA,EAAAA,KAACrC,EAAM,CACL6C,QAASA,KACPlC,EAAS,YAAYmC,EAAAA,EAAAA,KAAa,EAClCR,SACH,+BAQW,C","sources":["pages/EmailVerificationPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../components/styleComponents/LoadingSpinner\";\r\nimport styled from \"styled-components\";\r\nimport logoBlack from \"../assets/logoBlack.png\";\r\nimport { scrollToTop } from \"../utils/utils\";\r\n\r\nconst EmailVerificationPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState();\r\n\r\n  // getting the verificationString from the url that user receive\r\n  const { verificationString } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // POST info to server\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ verificationString: verificationString }),\r\n    };\r\n    const loadVerification = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/verify-email`,\r\n          requestOptions\r\n        );\r\n\r\n        const parseResponse = await response.json();\r\n\r\n        if (parseResponse) {\r\n          // set the key token in local storage to the new token\r\n          localStorage.setItem(\"token\", parseResponse?.data?.token);\r\n          setSuccess(true);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.log(error.stack);\r\n        setSuccess(false);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadVerification();\r\n  }, []);\r\n\r\n  return (\r\n    <VerificationContainer>\r\n      {loading ? (\r\n        <>\r\n          <LoadingSpinner />\r\n        </>\r\n      ) : (\r\n        <VerificationWrapper>\r\n          <LogoContainer>\r\n            <Logo src={logoBlack} alt=\"logoBlack\" />\r\n          </LogoContainer>\r\n          {success === true ? (\r\n            <>\r\n              <Title>Thanks for verifying your email.</Title>\r\n              <Button\r\n                onClick={() => {\r\n                  navigate(\"/\"), scrollToTop();\r\n                }}\r\n              >\r\n                Go To Home Page\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            success === false && (\r\n              <>\r\n                <Title>\r\n                  Something went wrong while trying to verify you email.\r\n                </Title>\r\n                <Button\r\n                  onClick={() => {\r\n                    navigate(\"/signup\"), scrollToTop();\r\n                  }}\r\n                >\r\n                  Back To SignUp Page\r\n                </Button>\r\n              </>\r\n            )\r\n          )}\r\n        </VerificationWrapper>\r\n      )}\r\n    </VerificationContainer>\r\n  );\r\n};\r\n\r\n// Login page style\r\nconst VerificationContainer = styled.div`\r\n  min-height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst VerificationWrapper = styled.div`\r\n  width: fit-content;\r\n  padding: 50px;\r\n  margin: 6rem auto;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 12px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 90%;\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  font-size: 30px;\r\n  margin: 20px 0;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 150px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 15px;\r\n  color: white;\r\n  background: black;\r\n  border: 1px solid white;\r\n  border-radius: 25px;\r\n  font-size: 18px;\r\n  transition: all 0.7s ease-in-out;\r\n  margin: 25px 0;\r\n  width: 100%;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: transparent;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport default EmailVerificationPage;\r\n"],"names":["VerificationContainer","styled","div","_templateObject","_taggedTemplateLiteral","VerificationWrapper","_templateObject2","Title","h3","_templateObject3","LogoContainer","_templateObject4","Logo","img","_templateObject5","Button","button","_templateObject6","EmailVerificationPage","loading","setLoading","useState","success","setSuccess","verificationString","useParams","navigate","useNavigate","useEffect","requestOptions","method","headers","body","JSON","stringify","async","response","fetch","concat","process","parseResponse","json","_parseResponse$data","localStorage","setItem","data","token","error","console","log","stack","loadVerification","_jsx","children","_Fragment","LoadingSpinner","_jsxs","src","logoBlack","alt","onClick","scrollToTop"],"sourceRoot":""}