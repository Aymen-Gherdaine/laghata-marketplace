{"version":3,"file":"static/js/982.b6e39217.chunk.js","mappings":"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","sources":["pages/BookingPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport surf1 from \"../assets/surf1.jpg\";\r\nimport styled from \"styled-components\";\r\nimport LoadingSpinner from \"../components/styleComponents/LoadingSpinner\";\r\nimport { BookingContext } from \"../components/context/BookingContext\";\r\nimport { useContext } from \"react\";\r\nimport format from \"date-fns/format\";\r\nimport { Circles } from \"react-loader-spinner\";\r\nimport { addDays } from \"date-fns\";\r\n\r\nconst BookingPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [listing, setListing] = useState();\r\n  const [renter, setRenter] = useState();\r\n  const { id } = useParams();\r\n\r\n  // getting information from booking context\r\n  const { dateRange, setDateRange, bookingLoading, setBookingLoading } =\r\n    useContext(BookingContext);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  // fetching data by listing id\r\n  useEffect(() => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const fechingLisitngDataHandler = async () => {\r\n        // fetching listing information by lisitng id\r\n        const fetchListingById = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/listings/listing/${id}`\r\n        );\r\n\r\n        // parse the data received\r\n        const responseJson = await fetchListingById.json();\r\n\r\n        // fetch renter information by renterId\r\n        const fetchRenter = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/user/${responseJson.data.renterId}`\r\n        );\r\n\r\n        // parse the data\r\n        const responseJsonRenter = await fetchRenter.json();\r\n\r\n        if (responseJson.data && responseJsonRenter.data) {\r\n          setListing(responseJson.data);\r\n\r\n          setRenter(responseJsonRenter.data);\r\n\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fechingLisitngDataHandler();\r\n    } catch (error) {\r\n      console.log(error.stack);\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  // function to calculate the number of reservation days\r\n  const numOfReservationDay =\r\n    (dateRange[0].endDate - dateRange[0].startDate) / (1000 * 3600 * 24);\r\n\r\n  // adding reservation to db\r\n  const reservationHandler = async () => {\r\n    setBookingLoading(true);\r\n\r\n    try {\r\n      // reservation info\r\n      const reservation = {\r\n        listingId: listing._id,\r\n        renterId: listing.renterId,\r\n        clientId: JSON.parse(localStorage.getItem(\"id\")),\r\n        bookingDate: [\r\n          {\r\n            startDate: dateRange[0].startDate,\r\n            endDate: dateRange[0].endDate,\r\n          },\r\n        ],\r\n        location: listing.location,\r\n      };\r\n\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(reservation),\r\n      };\r\n\r\n      // post the new booking to our db\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/listing/reservation`,\r\n        requestOptions\r\n      );\r\n\r\n      if (response.ok) {\r\n        setBookingLoading(false);\r\n        setDateRange([\r\n          {\r\n            startDate: new Date(),\r\n            endDate: addDays(new Date(), 1),\r\n            key: \"selection\",\r\n          },\r\n        ]);\r\n        navigate(`/listing/${id}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.stack);\r\n      setBookingLoading(false);\r\n    }\r\n    setBookingLoading(false);\r\n  };\r\n\r\n  return (\r\n    <BookingContainer>\r\n      {loading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <>\r\n          {listing && renter && !loading && (\r\n            <BookingWrapper>\r\n              <Banner>\r\n                <BannerImg src={surf1} alt=\"banner\" />\r\n                <h2>\r\n                  Book {listing.name} From {renter.username}\r\n                </h2>\r\n              </Banner>\r\n              <Main>\r\n                <BookingInfo>\r\n                  <h3>Booking Details</h3>\r\n                  <InfoContainer>\r\n                    <p>\r\n                      <span>Price Per Day: </span>${listing.price}\r\n                    </p>\r\n                    <p>\r\n                      <span>Booking Date: </span>\r\n                      {`${format(\r\n                        dateRange[0].startDate,\r\n                        \"MM/dd/yyyy\"\r\n                      )} to ${format(dateRange[0].endDate, \"MM/dd/yyyy\")}`}{\" \"}\r\n                      {numOfReservationDay === 1 ? (\r\n                        <span>({numOfReservationDay}/Day)</span>\r\n                      ) : (\r\n                        <span>({numOfReservationDay}/Days)</span>\r\n                      )}\r\n                    </p>\r\n                    <p>\r\n                      <span>\r\n                        Total Price: $\r\n                        {Number(listing.price) * numOfReservationDay}\r\n                      </span>\r\n                    </p>\r\n                    <ButtonWrapper>\r\n                      <Button onClick={reservationHandler}>\r\n                        {bookingLoading ? (\r\n                          <Circles\r\n                            height=\"20\"\r\n                            width=\"20\"\r\n                            color=\"#54cbe3\"\r\n                            ariaLabel=\"circles-loading\"\r\n                            wrapperClass=\"spinner\"\r\n                            visible={true}\r\n                          />\r\n                        ) : (\r\n                          \"Confirm Booking\"\r\n                        )}\r\n                      </Button>\r\n                    </ButtonWrapper>\r\n                  </InfoContainer>\r\n                </BookingInfo>\r\n              </Main>\r\n            </BookingWrapper>\r\n          )}\r\n        </>\r\n      )}\r\n    </BookingContainer>\r\n  );\r\n};\r\n\r\n// Booking style\r\nconst BookingContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 220px;\r\n`;\r\n\r\nconst BookingWrapper = styled.div``;\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  gap: 20px;\r\n\r\n  @media screen and (max-width: 700px) {\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  height: 160px;\r\n  position: relative;\r\n\r\n  h2 {\r\n    position: absolute;\r\n    top: 50px;\r\n    left: 20px;\r\n    font-size: 35px;\r\n    font-weight: 900;\r\n    text-transform: capitalize;\r\n    color: #242526;\r\n  }\r\n`;\r\n\r\nconst BannerImg = styled.img`\r\n  height: 160px;\r\n  width: 100%;\r\n  object-fit: cover;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst BookingInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  border: 1px solid;\r\n\r\n  background-color: #f5f0ed;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  gap: 20px;\r\n\r\n  span {\r\n    font-weight: 500;\r\n    padding-right: 5px;\r\n  }\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 25px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  width: 60%;\r\n\r\n  background: transparent;\r\n  border: 1px solid;\r\n  transition: background 0.5s ease-in-out;\r\n\r\n  :hover {\r\n    background-color: #dadce1;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    padding: 10px 35px;\r\n  }\r\n\r\n  .spinner {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default BookingPage;\r\n"],"names":["BookingContainer","styled","div","_templateObject","_taggedTemplateLiteral","BookingWrapper","_templateObject2","Main","_templateObject3","Banner","_templateObject4","BannerImg","img","_templateObject5","BookingInfo","_templateObject6","InfoContainer","_templateObject7","ButtonWrapper","_templateObject8","Button","button","_templateObject9","BookingPage","loading","setLoading","useState","listing","setListing","renter","setRenter","id","useParams","dateRange","setDateRange","bookingLoading","setBookingLoading","useContext","BookingContext","navigate","useNavigate","useEffect","async","fetchListingById","fetch","concat","process","responseJson","json","fetchRenter","data","renterId","responseJsonRenter","fechingLisitngDataHandler","error","console","log","stack","numOfReservationDay","endDate","startDate","_jsx","children","LoadingSpinner","_Fragment","_jsxs","src","surf1","alt","name","username","price","format","Number","onClick","reservation","listingId","_id","clientId","JSON","parse","localStorage","getItem","bookingDate","location","requestOptions","method","headers","body","stringify","ok","Date","addDays","key","Circles","height","width","color","ariaLabel","wrapperClass","visible"],"sourceRoot":""}